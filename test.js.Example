import K6ibmmq from "k6/x/K6ibmq";
import { Trend } from 'k6/metrics';
import { Counter } from 'k6/metrics';

const myTrend = new Trend('waiting_time');
const myError = new Counter('fail_message');

const newconn = K6ibmmq.new('QMName', 'Hostname', '1414', 'Channel', 'QueueIn', 'QueueOut');
newconn.setcredentials('user', 'pass')
newconn.connect()

export const options = {
    scenarios: {
      shared_iter_scenario: {
        executor: 'constant-arrival-rate',
        duration: '10s',
        rate: 1,
        timeUnit: '1s',
        preAllocatedVUs: 1,
        maxVUs: 50,
      },
    },
  };

export const setup = () => {
};

export default function () {
  var t = newconn.checkmsg();
  if (t > 0) {
    myTrend.add(t)
  } else {
    myError.add(1)
  }
};

export const teardown = () => {
  newconn.close();
};